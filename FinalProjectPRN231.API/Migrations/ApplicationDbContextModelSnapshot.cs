// <auto-generated />
using System;
using FinalProjectPRN231.API.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProjectPRN231.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeerId");

                    b.HasIndex("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Attendance", (string)null);
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.AttendanceHours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttendanceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceId");

                    b.HasIndex("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("AttendanceHours", (string)null);
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeerId");

                    b.HasIndex("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.EducationLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeerId");

                    b.HasIndex("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("EducationLevel", (string)null);
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.Employeer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CivilId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("HiredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Employeer", (string)null);
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.JobDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxSalary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("MaxsSalary");

                    b.Property<decimal>("MinSalary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("MinSalary");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("JobDetail", (string)null);
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeerId");

                    b.HasIndex("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Location", (string)null);
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Allowance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Allowance");

                    b.Property<decimal>("BaseSalary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("BaseSalary");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deduction")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Deduction");

                    b.Property<int>("EmployeerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeerId");

                    b.HasIndex("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Salary", (string)null);
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.WorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Relevant")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeerId");

                    b.HasIndex("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("WorkExperience", (string)null);
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.Attendance", b =>
                {
                    b.HasOne("FinalProjectPRN231.CoreBusiness.Entities.Employeer", "Employeer")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Attendance_Employeer_FK");

                    b.Navigation("Employeer");
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.AttendanceHours", b =>
                {
                    b.HasOne("FinalProjectPRN231.CoreBusiness.Entities.Attendance", "Attendance")
                        .WithMany("AttendanceHours")
                        .HasForeignKey("AttendanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Attendance_AttendanceHours_PK");

                    b.Navigation("Attendance");
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.Department", b =>
                {
                    b.HasOne("FinalProjectPRN231.CoreBusiness.Entities.Employeer", "Employeer")
                        .WithMany("Departments")
                        .HasForeignKey("EmployeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Employeer_Department_PK");

                    b.Navigation("Employeer");
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.EducationLevel", b =>
                {
                    b.HasOne("FinalProjectPRN231.CoreBusiness.Entities.Employeer", "Employeer")
                        .WithMany("Educations")
                        .HasForeignKey("EmployeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Employeer_EducationLevel_PK");

                    b.Navigation("Employeer");
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.JobDetail", b =>
                {
                    b.HasOne("FinalProjectPRN231.CoreBusiness.Entities.Department", "Department")
                        .WithMany("JobDetail")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Department_JobDetail_FK");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.Location", b =>
                {
                    b.HasOne("FinalProjectPRN231.CoreBusiness.Entities.Employeer", "Employeer")
                        .WithMany("Locations")
                        .HasForeignKey("EmployeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Employeer_Location_FK");

                    b.Navigation("Employeer");
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.Salary", b =>
                {
                    b.HasOne("FinalProjectPRN231.CoreBusiness.Entities.Employeer", "Employeer")
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Employeer_Salary_FK");

                    b.Navigation("Employeer");
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.WorkExperience", b =>
                {
                    b.HasOne("FinalProjectPRN231.CoreBusiness.Entities.Employeer", "Employeer")
                        .WithMany("WorkExperiences")
                        .HasForeignKey("EmployeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Employeer_WorkExperience_FK");

                    b.Navigation("Employeer");
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.Attendance", b =>
                {
                    b.Navigation("AttendanceHours");
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.Department", b =>
                {
                    b.Navigation("JobDetail");
                });

            modelBuilder.Entity("FinalProjectPRN231.CoreBusiness.Entities.Employeer", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Departments");

                    b.Navigation("Educations");

                    b.Navigation("Locations");

                    b.Navigation("Salaries");

                    b.Navigation("WorkExperiences");
                });
#pragma warning restore 612, 618
        }
    }
}
